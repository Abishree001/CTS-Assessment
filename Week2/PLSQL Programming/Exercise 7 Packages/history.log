caf139ce-019b-4a7e-aa7a-4e14747ec9bd:1751036447666:0:F:BEGIN\n  EXECUTE IMMEDIATE 'DROP PACKAGE CustomerManagement';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -4043 THEN NULL; ELSE RAISE;\n    END IF;\nEND;\n/
e31e28fd-be93-45e6-905b-002772d918f1:1751036448040:51:F:BEGIN\n  EXECUTE IMMEDIATE 'DROP TABLE customers CASCADE CONSTRAINTS';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -942 THEN NULL; ELSE RAISE;\n    END IF;\nEND;\n/
ec5589ed-3942-43bb-8527-5ac9453436b4:1751036448356:32:F:CREATE TABLE customers (\n  customer_id NUMBER PRIMARY KEY,\n  name VARCHAR2(100),\n  balance NUMBER\n);
2ab6b5fa-d544-41ff-8388-49f5217b7b40:1751036448442:0:F:/
42e86468-e6dc-4627-9a32-df347e7d89cf:1751036449063:26:F:CREATE OR REPLACE PACKAGE CustomerManagement IS\n  PROCEDURE AddCustomer(p_id NUMBER, p_name VARCHAR2, p_balance NUMBER);\n  PROCEDURE UpdateCustomer(p_id NUMBER, p_name VARCHAR2);\n  FUNCTION GetBalance(p_id NUMBER) RETURN NUMBER;\nEND CustomerManagement;\n/
f60af482-0946-4834-be1d-23968d4d79de:1751036450556:53:F:CREATE OR REPLACE PACKAGE BODY CustomerManagement IS\n  PROCEDURE AddCustomer(p_id NUMBER, p_name VARCHAR2, p_balance NUMBER) IS\n  BEGIN\n    INSERT INTO customers VALUES (p_id, p_name, p_balance);\n  END;\n\n  PROCEDURE UpdateCustomer(p_id NUMBER, p_name VARCHAR2) IS\n  BEGIN\n    UPDATE customers SET name = p_name WHERE customer_id = p_id;\n  END;\n\n  FUNCTION GetBalance(p_id NUMBER) RETURN NUMBER IS\n    v_balance NUMBER;\n  BEGIN\n    SELECT balance INTO v_balance FROM customers WHERE customer_id = p_id;\n    RETURN v_balance;\n  END;\nEND CustomerManagement;\n/
45fc1c34-fbc4-48fc-8020-6e11a362726f:1751036450976:24:F:BEGIN\n  CustomerManagement.AddCustomer(1, 'Abi', 10000);\n  CustomerManagement.UpdateCustomer(1, 'Abi M');\n  DBMS_OUTPUT.PUT_LINE('Balance: ' || CustomerManagement.GetBalance(1));\nEND;\n/
f8f0405e-5c68-4701-9996-2954d39ced0a:1751036518624:65:F:BEGIN\n  EXECUTE IMMEDIATE 'DROP PACKAGE CustomerManagement';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -4043 THEN NULL; ELSE RAISE;\n    END IF;\nEND;\n/
e8309ea2-0ec5-47e7-bf3b-84e7dfd574e2:1751036518977:56:F:BEGIN\n  EXECUTE IMMEDIATE 'DROP TABLE customers CASCADE CONSTRAINTS';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -942 THEN NULL; ELSE RAISE;\n    END IF;\nEND;\n/
9133c52d-7f9d-47ad-96d2-c3c599d6db9e:1751036519231:43:F:CREATE TABLE customers (\n  customer_id NUMBER PRIMARY KEY,\n  name VARCHAR2(100),\n  balance NUMBER\n);
1150c0a6-9d54-42ab-84d7-a6b4ddd079c9:1751036519345:0:F:/
099dd7d0-c68a-42e6-9aa2-d75215051a16:1751036519974:29:F:CREATE OR REPLACE PACKAGE CustomerManagement IS\n  PROCEDURE AddCustomer(p_id NUMBER, p_name VARCHAR2, p_balance NUMBER);\n  PROCEDURE UpdateCustomer(p_id NUMBER, p_name VARCHAR2);\n  FUNCTION GetBalance(p_id NUMBER) RETURN NUMBER;\nEND CustomerManagement;\n/
07f0a166-c613-4602-af7c-ecd436588578:1751036521082:24:F:CREATE OR REPLACE PACKAGE BODY CustomerManagement IS\n  PROCEDURE AddCustomer(p_id NUMBER, p_name VARCHAR2, p_balance NUMBER) IS\n  BEGIN\n    INSERT INTO customers VALUES (p_id, p_name, p_balance);\n  END;\n\n  PROCEDURE UpdateCustomer(p_id NUMBER, p_name VARCHAR2) IS\n  BEGIN\n    UPDATE customers SET name = p_name WHERE customer_id = p_id;\n  END;\n\n  FUNCTION GetBalance(p_id NUMBER) RETURN NUMBER IS\n    v_balance NUMBER;\n  BEGIN\n    SELECT balance INTO v_balance FROM customers WHERE customer_id = p_id;\n    RETURN v_balance;\n  END;\nEND CustomerManagement;\n/
ea55f764-9edc-4663-98ca-f712faad10fe:1751036521318:27:F:BEGIN\n  CustomerManagement.AddCustomer(1, 'Abi', 10000);\n  CustomerManagement.UpdateCustomer(1, 'Abi M');\n  DBMS_OUTPUT.PUT_LINE('Balance: ' || CustomerManagement.GetBalance(1));\nEND;\n/
6cb0e648-5bec-40a7-bec5-ba39aa97de80:1751036763301:16:S:BEGIN\n  EXECUTE IMMEDIATE 'DROP PACKAGE CustomerManagement';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -4043 THEN NULL; ELSE RAISE;\n    END IF;\nEND;\n/
e131fc84-9b38-4a5e-9147-1109bf355c90:1751036763704:47:S:BEGIN\n  EXECUTE IMMEDIATE 'DROP TABLE customers CASCADE CONSTRAINTS';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -942 THEN NULL; ELSE RAISE;\n    END IF;\nEND;\n/
4047056b-6db6-4d1d-aecb-faf297198f2b:1751036763997:34:S:CREATE TABLE customers (\n  customer_id NUMBER PRIMARY KEY,\n  name VARCHAR2(100),\n  balance NUMBER\n);
b7c11a4e-4cdd-48be-b36d-bcc9bd4d3925:1751036764080:0:F:/
3ac58c2f-6eed-45fa-9452-446d2eebb740:1751036764582:15:S:CREATE OR REPLACE PACKAGE CustomerManagement IS\n  PROCEDURE AddCustomer(p_id NUMBER, p_name VARCHAR2, p_balance NUMBER);\n  PROCEDURE UpdateCustomer(p_id NUMBER, p_name VARCHAR2);\n  FUNCTION GetBalance(p_id NUMBER) RETURN NUMBER;\nEND CustomerManagement;\n/
f5da4162-77d1-452f-88e0-e21ad6c82929:1751036765949:34:S:CREATE OR REPLACE PACKAGE BODY CustomerManagement IS\n  PROCEDURE AddCustomer(p_id NUMBER, p_name VARCHAR2, p_balance NUMBER) IS\n  BEGIN\n    INSERT INTO customers VALUES (p_id, p_name, p_balance);\n  END;\n\n  PROCEDURE UpdateCustomer(p_id NUMBER, p_name VARCHAR2) IS\n  BEGIN\n    UPDATE customers SET name = p_name WHERE customer_id = p_id;\n  END;\n\n  FUNCTION GetBalance(p_id NUMBER) RETURN NUMBER IS\n    v_balance NUMBER;\n  BEGIN\n    SELECT balance INTO v_balance FROM customers WHERE customer_id = p_id;\n    RETURN v_balance;\n  END;\nEND CustomerManagement;\n/
7bd3db4f-1b14-48c6-92f4-cd93c54996dd:1751036766290:26:S:BEGIN\n  CustomerManagement.AddCustomer(1, 'Abi', 10000);\n  CustomerManagement.UpdateCustomer(1, 'Abi M');\n  DBMS_OUTPUT.PUT_LINE('Balance: ' || CustomerManagement.GetBalance(1));\nEND;\n/
fcbe9aca-12d1-4a42-820c-66064b0755b8:1751036800542:11:S:BEGIN\n  EXECUTE IMMEDIATE 'DROP PACKAGE CustomerManagement';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -4043 THEN NULL; ELSE RAISE;\n    END IF;\nEND;\n/
d446d9f8-b84b-453e-a688-6b63db123f75:1751036800779:28:S:BEGIN\n  EXECUTE IMMEDIATE 'DROP TABLE customers CASCADE CONSTRAINTS';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -942 THEN NULL; ELSE RAISE;\n    END IF;\nEND;\n/
f3da0d49-5fbf-4dfb-bb9f-6db7dc46a8f3:1751036800982:25:S:CREATE TABLE customers (\n  customer_id NUMBER PRIMARY KEY,\n  name VARCHAR2(100),\n  balance NUMBER\n);
0fb59594-479b-4eef-a5d1-b1a38d3a0858:1751036801045:0:F:/
35d9f5ab-2997-4dff-915c-150d2c7b28a3:1751036801549:14:S:CREATE OR REPLACE PACKAGE CustomerManagement IS\n  PROCEDURE AddCustomer(p_id NUMBER, p_name VARCHAR2, p_balance NUMBER);\n  PROCEDURE UpdateCustomer(p_id NUMBER, p_name VARCHAR2);\n  FUNCTION GetBalance(p_id NUMBER) RETURN NUMBER;\nEND CustomerManagement;\n/
1d66a3ea-34c2-4b13-93ad-66ec1dd9341c:1751036802694:25:S:CREATE OR REPLACE PACKAGE BODY CustomerManagement IS\n  PROCEDURE AddCustomer(p_id NUMBER, p_name VARCHAR2, p_balance NUMBER) IS\n  BEGIN\n    INSERT INTO customers VALUES (p_id, p_name, p_balance);\n  END;\n\n  PROCEDURE UpdateCustomer(p_id NUMBER, p_name VARCHAR2) IS\n  BEGIN\n    UPDATE customers SET name = p_name WHERE customer_id = p_id;\n  END;\n\n  FUNCTION GetBalance(p_id NUMBER) RETURN NUMBER IS\n    v_balance NUMBER;\n  BEGIN\n    SELECT balance INTO v_balance FROM customers WHERE customer_id = p_id;\n    RETURN v_balance;\n  END;\nEND CustomerManagement;\n/
baa50501-76df-4d8c-8377-14415a0667c4:1751036802977:11:S:BEGIN\n  CustomerManagement.AddCustomer(1, 'Abi', 10000);\n  CustomerManagement.UpdateCustomer(1, 'Abi M');\n  DBMS_OUTPUT.PUT_LINE('Balance: ' || CustomerManagement.GetBalance(1));\nEND;\n/
baa50501-76df-4d8c-8377-14415a0667c4:1751036802977:11:S:BEGIN\n  CustomerManagement.AddCustomer(1, 'Abi', 10000);\n  CustomerManagement.UpdateCustomer(1, 'Abi M');\n  DBMS_OUTPUT.PUT_LINE('Balance: ' || CustomerManagement.GetBalance(1));\nEND;\n/
f681e5e3-797b-44db-8622-1a4337736a86:1751036957808:21:S:BEGIN\n  EXECUTE IMMEDIATE 'DROP PACKAGE CustomerManagement';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -4043 THEN\n      RAISE;\n    END IF;\nEND;\n/
3cf7b841-324b-45b9-95b8-b786e93653dd:1751036958115:40:S:BEGIN\n  EXECUTE IMMEDIATE 'DROP TABLE customers CASCADE CONSTRAINTS';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -942 THEN\n      RAISE;\n    END IF;\nEND;\n/
c988a9ba-6322-4c43-a06d-9bb8221944ec:1751036958397:20:S:CREATE TABLE customers (\n  customer_id NUMBER PRIMARY KEY,\n  name        VARCHAR2(100),\n  balance     NUMBER\n);
fce4831d-3696-4d6f-b063-7a5e988ac81f:1751036958464:0:F:/
dee76c0f-ff2f-4bad-9cea-5f29a0b877c3:1751036958894:13:S:CREATE OR REPLACE PACKAGE CustomerManagement IS\n  PROCEDURE AddCustomer(p_id NUMBER, p_name VARCHAR2, p_balance NUMBER);\n  PROCEDURE UpdateCustomer(p_id NUMBER, p_name VARCHAR2);\n  FUNCTION GetBalance(p_id NUMBER) RETURN NUMBER;\nEND CustomerManagement;\n/
85a9d1ae-00b9-4c6a-9091-5d07f43bceae:1751036960041:17:S:CREATE OR REPLACE PACKAGE BODY CustomerManagement IS\n\n  PROCEDURE AddCustomer(p_id NUMBER, p_name VARCHAR2, p_balance NUMBER) IS\n  BEGIN\n    INSERT INTO customers (customer_id, name, balance)\n    VALUES (p_id, p_name, p_balance);\n  END;\n\n  PROCEDURE UpdateCustomer(p_id NUMBER, p_name VARCHAR2) IS\n  BEGIN\n    UPDATE customers\n    SET name = p_name\n    WHERE customer_id = p_id;\n  END;\n\n  FUNCTION GetBalance(p_id NUMBER) RETURN NUMBER IS\n    v_balance NUMBER;\n  BEGIN\n    SELECT balance INTO v_balance\n    FROM customers\n    WHERE customer_id = p_id;\n    RETURN v_balance;\n  END;\n\nEND CustomerManagement;\n/
ee1248f1-5426-49b8-86aa-292aaaba4bde:1751036960199:0:S:SET SERVEROUTPUT ON;
8010005d-d07a-4219-b2cc-a8a1ca5ca29d:1751036960450:33:S:BEGIN\n  CustomerManagement.AddCustomer(1, 'Abi', 10000);\n  CustomerManagement.UpdateCustomer(1, 'Abi M');\n  DBMS_OUTPUT.PUT_LINE('Balance: ' || CustomerManagement.GetBalance(1));\nEND;\n/
64fdede0-0537-4bc4-b4b3-9d026ba49db3:1751037672147:0:S:SET SERVEROUTPUT ON;
05ca992a-9820-4842-82d2-5bae670675c7:1751037672418:0:F:EXEC SafeTransferFunds(1, 2, 2000);
fa296a3b-5564-44bf-838e-acec08115175:1751037672852:131:S:EXEC UpdateSalary(1, 10);
477467d3-1bbb-4b16-8237-2275ef450c4a:1751037673132:0:F:EXEC AddNewCustomer(3, 'Ramya', 28, 6000, 'N', 7.0);
